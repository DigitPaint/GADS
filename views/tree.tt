            [% FOREACH tree IN trees %]
                $('#jstree[% tree.id %]')
                .on({
                    'changed.jstree': function (e, data) {
                        var selectedElms = $('#jstree[% tree.id %]').jstree("get_selected", true);
                        $('.[% tree.field %]').remove();

                        var field_on_change = $("body").data("change" + [% tree.id %] );
                        var re = field_on_change && field_on_change.re;
                        var show = false;
                        $.each(selectedElms, function() {
                            $('#editform').append('<input type="hidden" name="[% tree.field %]" class="[% tree.field %]" value="' + this.id + '" />');
                            if (re) {
                                var val_text = data.instance.get_path(this, '#');
                                if (re.test(val_text)) {
                                    show = true;
                                }
                            }
                        });
                        if (re) {
                            var divid = field_on_change.divid;
                            if (show) {
                                $("#" + divid ).show()
                            } else {
                                $("#" + divid ).hide()
                            }
                        }
                    }
                    [% IF tree.end_node_only OR tree.multivalue %],
                        'select_node.jstree': function (e, data) {
                            if (data.node.children.length > 0) {
                                [% IF tree.end_node_only %]
                                    $('#jstree[% tree.id %]').jstree(true).deselect_node(data.node);
                                    $('#jstree[% tree.id %]').jstree(true).toggle_node(data.node);
                                [% ELSIF tree.multivalue %]
                                    $('#jstree[% tree.id %]').jstree(true).open_node(data.node);
                                [% END %]
                            }
                        }
                    [% END %]
                })
                .jstree({
                    "core" : {
                        "check_callback" : true,
                        "force_text" : true,
                        "themes" : { "stripes" : true },
                        [% UNLESS tree.multivalue %]
                            "multiple" : false,
                        [% END %]
                        'data' : {
                            'url' : function (node) {
                                return '/tree' + new Date().getTime() + '/[% tree.id %]?[% tree.value.ids_as_params %]';
                            },
                            'data' : function (node) {
                                return { 'id' : node.id };
                            }
                        }
                    },
                    [% IF tree.multivalue %]
                        "checkbox": {
                            "cascade": "sdfds"
                        },
                    [% END %]
                    [% IF tree.readonly OR tree.multivalue %]
                        "plugins" : [
                            [% IF tree.multivalue %]
                                'checkbox',
                            [% END %],
                            [% IF tree.readonly %]
                                "conditionalselect" : function (node) {
                                    return false;
                                }
                            [% END %]
                        ]
                    [% END %]
                });
                [%# Hack - see https://github.com/vakata/jstree/issues/1955 %]
                $('#jstree[% tree.id %]').jstree(true).settings.checkbox.cascade = 'undetermined';
            [% END %]
